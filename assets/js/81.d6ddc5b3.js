(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{295:function(t,e,d){"use strict";d.r(e);var v=d(28),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,d=t._self._c||e;return d("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[d("h1",{attrs:{id:"dropwizardmetricsoptions"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#dropwizardmetricsoptions"}},[t._v("#")]),t._v(" DropwizardMetricsOptions")]),t._v(" "),d("p",[t._v("Vert.x Dropwizard metrics configuration.")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th"),t._v(" "),d("th"),t._v(" "),d("th")])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Name")]),t._v(" "),d("td",[t._v("Type")]),t._v(" "),d("td",[t._v("Description")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@baseName")])]),t._v(" "),d("td",[d("code",[t._v("String")])]),t._v(" "),d("td",[t._v("Set a custom baseName for metrics.")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@configPath")])]),t._v(" "),d("td",[d("code",[t._v("String")])]),t._v(" "),d("td",[t._v("Set the path for a config file that contains options in JSON format, to be used to create a new options object. The file will be looked for on the file system first and then on the classpath if it's not found.")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@enabled")])]),t._v(" "),d("td",[d("code",[t._v("Boolean")])]),t._v(" "),d("td",[t._v("-")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@jmxDomain")])]),t._v(" "),d("td",[d("code",[t._v("String")])]),t._v(" "),d("td",[t._v("Set the JMX domain to use when JMX metrics are enabled.")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@jmxEnabled")])]),t._v(" "),d("td",[d("code",[t._v("Boolean")])]),t._v(" "),d("td",[t._v("Set whether JMX will be enabled on the Vert.x instance.")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@monitoredEventBusHandlers")])]),t._v(" "),d("td",[d("code",[t._v("Array of Match")])]),t._v(" "),d("td",[t._v("Add a monitored event bus handler.")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@monitoredHttpClientEndpoint")])]),t._v(" "),d("td",[d("code",[t._v("Array of Match")])]),t._v(" "),d("td")]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@monitoredHttpClientEndpoints")])]),t._v(" "),d("td",[d("code",[t._v("Array of Match")])]),t._v(" "),d("td",[t._v("Add an monitored http client endpoint.")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@monitoredHttpClientUris")])]),t._v(" "),d("td",[d("code",[t._v("Array of Match")])]),t._v(" "),d("td",[t._v("Add an monitored http client uri.")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@monitoredHttpServerUris")])]),t._v(" "),d("td",[d("code",[t._v("Array of Match")])]),t._v(" "),d("td",[t._v("Add an monitored http server uri.")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@registryName")])]),t._v(" "),d("td",[d("code",[t._v("String")])]),t._v(" "),d("td",[t._v("Set the name used for registering the metrics in the Dropwizard shared registry.")])])])]),t._v(" "),d("h1",{attrs:{id:"match"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" Match")]),t._v(" "),d("p",[t._v("A match for a value.")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th"),t._v(" "),d("th"),t._v(" "),d("th")])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Name")]),t._v(" "),d("td",[t._v("Type")]),t._v(" "),d("td",[t._v("Description")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@alias")])]),t._v(" "),d("td",[d("code",[t._v("String")])]),t._v(" "),d("td",[t._v("Set the alias the human readable name that will be used as a part of registry entry name when the value matches.")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@type")])]),t._v(" "),d("td",[d("code",[t._v("MatchType")])]),t._v(" "),d("td",[t._v("Set the type of matching to apply.")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("@value")])]),t._v(" "),d("td",[d("code",[t._v("String")])]),t._v(" "),d("td",[t._v("Set the matched value.")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);