#!/usr/bin/env bash
(set -o igncr) 2>/dev/null && set -o igncr; # cygwin encoding fix

# fight simlinks and avoid readlink -f which doesn't exist on Darwin and Solaris
pushd . > /dev/null
basedir="${BASH_SOURCE[0]}";
while([ -h "${basedir}" ]); do
    cd "`dirname "${basedir}"`"
    basedir="$(readlink "`basename "${basedir}"`")";
done
cd "`dirname "${basedir}"`" > /dev/null
basedir="`pwd`";
popd  > /dev/null

case `uname` in
    *CYGWIN*) basedir=`cygpath -w "$basedir"`;;
esac

# Attempt to use JAVA_HOME
JAVA_EXE="$JAVA_HOME/bin/java"
if ! [[ -x "$JAVA_EXE" ]]; then
  JAVA_EXE=java
fi

# Use JVMCI if installed
if [[ -d "node_modules/.jvmci" ]]; then
  JVMCI="--module-path=node_modules/.jvmci -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI --upgrade-module-path=node_modules/.jvmci/compiler.jar"
fi

# If exists node_modules/.bin/es4x-launcher.jar
# use it's class path (else rely on default runtime)
APP_RUNTIME="node_modules/.bin/es4x-launcher.jar"
if ! [[ -x "APP_RUNTIME" ]]; then
  APP_RUNTIME="$basedir/../runtime/*"
fi

exec "$JAVA_EXE" -XX:+IgnoreUnrecognizedVMOptions $JVMCI $JAVA_OPTS -cp "$APP_RUNTIME:$basedir/../es4x-pm-${project.version}.jar" io.reactiverse.es4x.ES4X "$@"
