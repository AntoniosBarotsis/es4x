(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{257:function(t,a,s){"use strict";s.r(a);var e=s(28),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"the-apache-shiro-auth-provider-implementation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-apache-shiro-auth-provider-implementation"}},[t._v("#")]),t._v(" The Apache Shiro Auth provider implementation")]),t._v(" "),s("p",[t._v("This is an auth provider implementation that uses "),s("a",{attrs:{href:"http://shiro.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apache\nShiro"),s("OutboundLink")],1),t._v(". To use this project, add the following\ndependency to the "),s("em",[t._v("dependencies")]),t._v(" section of your build descriptor:")]),t._v(" "),s("ul",[s("li",[t._v("Maven (in your "),s("code",[t._v("pom.xml")]),t._v("):")])]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("io.vertx"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("vertx-auth-shiro"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${maven.version}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("Gradle (in your "),s("code",[t._v("build.gradle")]),t._v(" file):")])]),t._v(" "),s("div",{staticClass:"language-groovy extra-class"},[s("pre",{pre:!0,attrs:{class:"language-groovy"}},[s("code",[t._v("compile "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'io.vertx:vertx-auth-shiro:${maven.version}'")]),t._v("\n")])])]),s("p",[t._v("We provide out of the box support for properties and LDAP based auth\nusing Shiro, and you can also plugin in any other Shiro Realm which\nexpects username and password for credentials.")]),t._v(" "),s("p",[t._v("To create an instance of the provider you use "),s("code",[t._v("ShiroAuth")]),t._v(". You specify\nthe type of Shiro auth provider that you want with "),s("code",[t._v("ShiroAuthRealmType")]),t._v(",\nand you specify the configuration in a JSON object.")]),t._v(" "),s("p",[t._v("Hereâ€™s an example of creating a Shiro auth provider by specifying the\ntype:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ShiroAuth")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@vertx/auth-shiro"')]),t._v("\n\nlet config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"properties_path"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"classpath:test-auth.properties"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nlet provider "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ShiroAuth")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vertx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ShiroAuthOptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PROPERTIES"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h1",{attrs:{id:"authentication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authentication"}},[t._v("#")]),t._v(" Authentication")]),t._v(" "),s("p",[t._v("When authenticating using this implementation, it assumes "),s("code",[t._v("username")]),t._v(" and\n"),s("code",[t._v("password")]),t._v(" fields are present in the authentication info:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("let authInfo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tim"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sausages"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nauthProvider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("authenticate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("authInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("succeeded")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    let user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Failed!")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h1",{attrs:{id:"authorisation-permission-role-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authorisation-permission-role-model"}},[t._v("#")]),t._v(" Authorisation - Permission-Role Model")]),t._v(" "),s("p",[t._v("Although Vert.x auth itself does not mandate any specific model of\npermissions (they are just opaque strings), this implementation uses a\nfamiliar user/role/permission model, where a user can have zero or more\nroles and a role can have zero or more permissions.")]),t._v(" "),s("p",[t._v("If validating if a user has a particular permission simply pass the\npermission into. "),s("code",[t._v("isAuthorised")]),t._v(" as follows:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAuthorized")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"newsletter:edit:13"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("succeeded")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    let hasPermission "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Failed to")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("If validating that a user has a particular "),s("em",[t._v("role")]),t._v(" then you should prefix\nthe argument with the role prefix.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAuthorized")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"role:manager"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("succeeded")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    let hasRole "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Failed to")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The default role prefix is "),s("code",[t._v("role:")]),t._v(". You can change this with\n"),s("code",[t._v("setRolePrefix")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"the-shiro-properties-auth-provider"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-shiro-properties-auth-provider"}},[t._v("#")]),t._v(" The Shiro properties auth provider")]),t._v(" "),s("p",[t._v("This auth provider implementation uses Apache Shiro to get\nuser/role/permission information from a properties file.")]),t._v(" "),s("p",[t._v("Note that roles are not available directly on the API due to the fact\nthat vertx-auth tries to be as portable as possible. However one can run\nassertions on role by using the prefix "),s("code",[t._v("role:")]),t._v(" or by specifying the\nprefered prefix with "),s("code",[t._v("setRolePrefix")]),t._v(".")]),t._v(" "),s("p",[t._v("The implementation will, by default, look for a file called\n"),s("code",[t._v("vertx-users.properties")]),t._v(" on the classpath.")]),t._v(" "),s("p",[t._v("If you want to change this, you can use the "),s("code",[t._v("properties_path")]),t._v("\nconfiguration element to define how the properties file is found.")]),t._v(" "),s("p",[t._v("The default value is "),s("code",[t._v("classpath:vertx-users.properties")]),t._v(".")]),t._v(" "),s("p",[t._v("If the value is prefixed with "),s("code",[t._v("classpath:")]),t._v(" then the classpath will be\nsearched for a properties file of that name.")]),t._v(" "),s("p",[t._v("If the value is prefixed with "),s("code",[t._v("file:")]),t._v(" then it specifies a file on the\nfile system.")]),t._v(" "),s("p",[t._v("If the value is prefixed with "),s("code",[t._v("url:")]),t._v(" then it specifies a URL from where\nto load the properties.")]),t._v(" "),s("p",[t._v("The properties file should have the following structure:")]),t._v(" "),s("p",[t._v("Each line should either contain the username, password and roles for a\nuser or the permissions in a role.")]),t._v(" "),s("p",[t._v("For a user line it should be of the form:")]),t._v(" "),s("p",[t._v("user.{username}={password},{roleName1},{roleName2},â€¦â€‹,{roleNameN}")]),t._v(" "),s("p",[t._v("For a role line it should be of the form:")]),t._v(" "),s("p",[t._v("role.{roleName}={permissionName1},{permissionName2},â€¦â€‹,{permissionNameN}")]),t._v(" "),s("p",[t._v("Hereâ€™s an example:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("user.tim = mypassword,administrator,developer\nuser.bob = hispassword,developer\nuser.joe = anotherpassword,manager\nrole.administrator=*\nrole.manager=play_golf,say_buzzwords\nrole.developer=do_actual_work\n")])])]),s("p",[t._v("When describing roles a wildcard "),s("code",[t._v("*")]),t._v(" can be used to indicate that the\nrole has all permissions.")]),t._v(" "),s("h2",{attrs:{id:"the-shiro-ldap-auth-provider"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-shiro-ldap-auth-provider"}},[t._v("#")]),t._v(" The Shiro LDAP auth provider")]),t._v(" "),s("p",[t._v("The LDAP auth realm gets user/role/permission information from an LDAP\nserver.")]),t._v(" "),s("p",[t._v("The following configuration properties are used to configure the LDAP\nrealm:")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("ldap_user_dn_template")]),t._v("\nthis is used to determine the actual lookup to use when looking up a\nuser with a particular id. An example is\n"),s("code",[t._v("uid={0},ou=users,dc=foo,dc=com")]),t._v(" - the element "),s("code",[t._v("{0}")]),t._v(" is substituted\nwith the user id to create the actual lookup. This setting is\nmandatory.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ldap_url")]),t._v("\nthe url to the LDAP server. The url must start with "),s("code",[t._v("ldap://")]),t._v(" and a\nport must be specified. An example is\n"),s("code",[t._v("ldap://myldapserver.mycompany.com:10389")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ldap_authentication_mechanism")]),t._v("\nSets the type of LDAP authentication mechanism to use when\nconnecting to the LDAP server.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ldap_context_factory_class_name")]),t._v("\nThe name of the ContextFactory class to use. This defaults to the\nSUN LDAP JNDI implementation but can be overridden to use custom\nLDAP factories.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ldap_pooling_enabled")]),t._v("\nSets whether or not connection pooling should be used when possible\nand appropriate.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ldap_referral")]),t._v("\nSets the LDAP referral behavior when creating a connection. Defaults\nto "),s("code",[t._v("follow")]),t._v(". See the Sun/Oracle LDAP referral documentation for\nmore:\n"),s("a",{attrs:{href:"http://java.sun.com/products/jndi/tutorial/ldap/referral/jndi.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://java.sun.com/products/jndi/tutorial/ldap/referral/jndi.html"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ldap_system_username")]),t._v("\nSets the system username that will be used when creating an LDAP\nconnection used for authorization queries. The user must have the\nability to query for authorization data for any application user.\nNote that setting this property is not required if the calling LDAP\nRealm does not perform authorization checks.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ldap_system_password")]),t._v("\nSets the password of the that will be used when creating an LDAP\nconnection used for authorization queries. Note that setting this\nproperty is not required if the calling LDAP Realm does not perform\nauthorization checks.")])])]),t._v(" "),s("p",[t._v("For more information, refer to the documentation of\norg.apache.shiro.realm.ldap.JndiLdapContextFactory.")]),t._v(" "),s("h2",{attrs:{id:"using-another-shiro-realm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-another-shiro-realm"}},[t._v("#")]),t._v(" Using another Shiro Realm")]),t._v(" "),s("p",[t._v("Itâ€™s also possible to create an auth provider instance using a\npre-created Apache Shiro Realm object.")]),t._v(" "),s("p",[t._v("This is done as follows:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ShiroAuth")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@vertx/auth-shiro"')]),t._v("\n\nlet provider "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ShiroAuth")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vertx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" realm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The implementation currently assumes that user/password based\nauthentication is used.")])])}),[],!1,null,null,null);a.default=n.exports}}]);